diff --git a/src/constants.js b/src/constants.js
index b39d40371ec6e156678fb9ca2a2719aa94bb1b1b..5260b84312057693b76002dd7b79d036d70e7e85 100644
--- a/src/constants.js
+++ b/src/constants.js
@@ -1,13 +1,13 @@
-export const VNODE_COMPONENT = '__c';
+export const VNODE_COMPONENT = '_component';
 export const NAMESPACE = '__PREFRESH__';
-export const COMPONENT_HOOKS = '__H';
-export const HOOKS_LIST = '__';
-export const EFFECTS_LIST = '__h';
-export const RERENDER_COUNT = '__r';
-export const CATCH_ERROR_OPTION = '__e';
-export const COMPONENT_DIRTY = '__d';
-export const VNODE_DOM = '__e';
-export const VNODE_CHILDREN = '__k';
-export const HOOK_VALUE = '__';
-export const HOOK_ARGS = '__H';
-export const HOOK_CLEANUP = '__c';
+export const COMPONENT_HOOKS = '__hooks';
+export const HOOKS_LIST = '_list';
+export const EFFECTS_LIST = '_pendingEffects';
+export const RERENDER_COUNT = '_rerenderCount';
+export const CATCH_ERROR_OPTION = '_catchError';
+export const COMPONENT_DIRTY = '_dirty';
+export const VNODE_DOM = '_dom';
+export const VNODE_CHILDREN = '_children';
+export const HOOK_VALUE = '_value';
+export const HOOK_ARGS = '_args';
+export const HOOK_CLEANUP = '_cleanup';
diff --git a/src/index.js b/src/index.js
index 6c80ef4ed9ca406299c2ed0271c87eb19e6011d5..2617a21eb4a6ba036768b4383bd13b0498f06c72 100644
--- a/src/index.js
+++ b/src/index.js
@@ -54,7 +54,7 @@ function replaceComponent(OldType, NewType, resetHookState) {
   pendingUpdates = pendingUpdates.filter(p => p[0] !== OldType);
 
   vnodes.forEach(vnode => {
-    if (!vnode.__c || !vnode.__c.__P) return;
+    if (!vnode[VNODE_COMPONENT] || !vnode[VNODE_COMPONENT]._parentDom) return;
     // update the type in-place to reference the new component
     vnode.type = NewType;
 
@@ -165,8 +165,8 @@ function replaceComponent(OldType, NewType, resetHookState) {
         );
 
         vnode[VNODE_COMPONENT][COMPONENT_HOOKS][HOOKS_LIST].forEach(hook => {
-          if (hook.__H && Array.isArray(hook.__H)) {
-            hook.__H = undefined;
+          if (hook[HOOK_ARGS] && Array.isArray(hook[HOOK_ARGS])) {
+            hook[HOOK_ARGS] = undefined;
           }
         });
       }
diff --git a/src/runtime/vnode.js b/src/runtime/vnode.js
index 01c77d5146d9341816e2cd4e636854196a922c6c..0a37307497e88760ff934a9695d9f548dc5c2f56 100644
--- a/src/runtime/vnode.js
+++ b/src/runtime/vnode.js
@@ -48,7 +48,7 @@ options.diffed = vnode => {
   if (vnode && typeof vnode.type === 'function') {
     const vnodes = vnodesForComponent.get(vnode.type);
     if (vnodes) {
-      const matchingDom = vnodes.filter(p => p.__c === vnode.__c);
+      const matchingDom = vnodes.filter(p => p[VNODE_COMPONENT] === vnode[VNODE_COMPONENT]);
       if (matchingDom.length > 1) {
         const i = vnodes.findIndex(p => p === matchingDom[0]);
         vnodes.splice(i, 1);
